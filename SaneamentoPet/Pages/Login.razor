@page "/"
@layout LoginLayout
@using System.ComponentModel.DataAnnotations
@inject NavigationManager NavigationManager

<PageTitle>Login</PageTitle>
<div class="login-container">
    <EditForm Model="@loginModel" OnValidSubmit="@HandleLogin">
        <DataAnnotationsValidator />
        <ValidationSummary />
        
        <div class="login">
            <div class="form-group">
                <label for="username">Usuário:</label>
                <InputText id="username" class="form-control" @bind-Value="@loginModel.Username" required />
                <ValidationMessage For="@(() => loginModel.Username)" />
            </div>

            <div class="form-group">
                <label for="password">Senha:</label>
                <InputText id="password" type="password" class="form-control" @bind-Value="@loginModel.Password" required />
                <ValidationMessage For="@(() => loginModel.Password)" />
            </div>
            <button type="submit" class="btn btn-primary">Entrar</button>
        </div>
       
    </EditForm>

    @if (loginFailed)
    {
        <div class="alert alert-danger mt-3 text-center">
            Usuário ou senha inválidos.
        </div>
    }
</div>

@code {
    private LoginModel loginModel = new LoginModel();
    private bool loginFailed = false;

    private void HandleLogin()
    {
        const string fixedUsername = "diego";
        const string fixedPassword = "81815341";

        if (loginModel.Username == fixedUsername && loginModel.Password == fixedPassword)
        {
            NavigationManager.NavigateTo("/Home");
            loginFailed = false;
        }
        else
        {
            loginFailed = true;
        }
    }

    public class LoginModel
    {
        [Required(ErrorMessage = "O nome de usuário é obrigatório.")]
        public string Username { get; set; }

        [Required(ErrorMessage = "A senha é obrigatória.")]
        public string Password { get; set; }
    }
}